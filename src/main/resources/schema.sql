DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS likes CASCADE;

CREATE TABLE GENRES
(
    ID   INTEGER           NOT NULL AUTO_INCREMENT,
    NAME CHARACTER VARYING NOT NULL,
    CONSTRAINT GENRES_PK PRIMARY KEY (ID)
);

CREATE TABLE MPA
(
    ID   INTEGER           NOT NULL AUTO_INCREMENT,
    NAME CHARACTER VARYING NOT NULL,
    CONSTRAINT MPA_PK PRIMARY KEY (ID)
);

CREATE TABLE USERS
(
    ID       INTEGER           NOT NULL AUTO_INCREMENT,
    LOGIN    CHARACTER VARYING NOT NULL,
    NAME     CHARACTER VARYING NOT NULL,
    EMAIL    CHARACTER VARYING NOT NULL,
    BIRTHDAY DATE              NOT NULL,
    CONSTRAINT USERS_PK PRIMARY KEY (ID)
);

CREATE TABLE FILMS
(
    ID           INTEGER           NOT NULL AUTO_INCREMENT,
    NAME         CHARACTER VARYING NOT NULL,
    DESCRIPTION  CHARACTER VARYING NOT NULL,
    RELEASE_DATE DATE              NOT NULL,
    DURATION     INTEGER           NOT NULL,
    RATE         INTEGER DEFAULT (0),
    MPA          INTEGER           NOT NULL,
    CONSTRAINT FILMS_PK PRIMARY KEY (ID),
    CONSTRAINT FILMS_FK_1 FOREIGN KEY (MPA) REFERENCES MPA (ID)
);

CREATE TABLE FILM_GENRE
(
    FILM_ID  INTEGER NOT NULL,
    GENRE_ID INTEGER NOT NULL,
    CONSTRAINT FILM_GENRE_FK_1 FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID),
    CONSTRAINT FILM_GENRE_FK_2 FOREIGN KEY (GENRE_ID) REFERENCES GENRES (ID)
);

CREATE TABLE FRIENDS
(
    USER_ID   INTEGER NOT NULL,
    FRIEND_ID INTEGER NOT NULL,
    CONSTRAINT FRIENDS_FK_1 FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
    CONSTRAINT FRIENDS_FK_2 FOREIGN KEY (FRIEND_ID) REFERENCES USERS (ID)
);

CREATE TABLE LIKES
(
    FILM_ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,
    CONSTRAINT LIKES_FK_1 FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID),
    CONSTRAINT LIKES_FK_2 FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);